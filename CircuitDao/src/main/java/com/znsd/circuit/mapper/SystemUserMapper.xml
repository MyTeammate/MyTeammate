<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.znsd.circuit.dao.SystemUserDao">
    <select id="systemUserCount" resultType="int" parameterType="map">
        select count(1) from t_user where delete_flag='否'
        <if test="name!=null &amp;&amp; name!=''">
			and	name LIKE '%${name}%'
		</if>
		<if test="state!=null &amp;&amp; state!='' &amp;&amp; state!='00'">
			and state = #{state}
		</if>
    </select>
    
    <select id="listSystemUser" resultType="User" parameterType="map">
        select tu.id,tu.userName,tu.`password`,tu.`name`,tr.id as roleId,tr.`name` as roleName,tu.entryDate,tu.leaveDate,tu.email,tu.loginDate,tu.state from t_user tu
		LEFT JOIN t_user_role tur
		on tu.id=tur.userId
		LEFT JOIN t_role tr
		on tur.roleId=tr.id
		where tu.delete_flag='否'
		<if test="name!=null &amp;&amp; name!=''">
			and	tu.name LIKE '%${name}%'
		</if>
		<if test="state!=null &amp;&amp; state!='' &amp;&amp; state!='00'">
			and tu.state = #{state}
		</if>
		GROUP BY tu.id
		order by tu.id desc
		limit #{pageIndex},#{pageSize}
    </select>
    
    <select id="selectSysteUser" resultType="SystemRole">
        select id,coding,`name`,state,createBy,updatedDate from t_role where delete_flag='否'
    </select>
    
    <select id="queryUserNameSysteUser" resultType="User" parameterType="String">
        select tu.id,tu.userName,tu.`password`,tu.`name`,tr.id as roleId,tr.`name` as roleName,tu.entryDate,tu.leaveDate,tu.email,tu.loginDate,tu.state from t_user tu
		LEFT JOIN t_user_role tur
		on tu.id=tur.userId
		LEFT JOIN t_role tr
		on tur.roleId=tr.id
		where tu.delete_flag='否' and tu.userName=#{userName}
    </select>
    
    <select id="queryNameSysteUser" resultType="User" parameterType="String">
        select tu.id,tu.userName,tu.`password`,tu.`name`,tr.id as roleId,tr.`name` as roleName,tu.entryDate,tu.leaveDate,tu.email,tu.loginDate,tu.state from t_user tu
		LEFT JOIN t_user_role tur
		on tu.id=tur.userId
		LEFT JOIN t_role tr
		on tur.roleId=tr.id
		where tu.delete_flag='否' and tu.`name`=#{name}
    </select>
    
    <insert id="add" parameterType="User">
        insert into t_user (userName,`passWord`,`name`,entryDate,createBy,createDate) values(#{userName},#{passWord},#{name},#{entryDate},#{createBy},#{createDate})
    </insert>
    
    <insert id="addRoleId" parameterType="Map">
        insert into t_user_role (userId,roleId) values (#{userId},#{roleId})
    </insert>
    
    <select id="queryUserName" parameterType="String" resultType="User">
        select tu.id,tu.userName,tu.`password`,tu.`name`,tr.id as roleId,tr.`name` as roleName,tu.entryDate,tu.leaveDate,tu.email,tu.loginDate,tu.state from t_user tu
		LEFT JOIN t_user_role tur
		on tu.id=tur.userId
		LEFT JOIN t_role tr
		on tur.roleId=tr.id
		where tu.delete_flag='否' and tu.userName=#{userName}
    </select>
    
    <update id="freezeSysteUser" parameterType="map">
        update t_user set leaveDate=#{updatedDate},state=#{newState},updatedBy=#{updatedBy},updatedDate=#{updatedDate} where id=#{id}
    </update>
    <update id="freezeSysteUser2" parameterType="map">
        update t_user set leaveDate=#{leaveDate},state=#{newState},updatedBy=#{updatedBy},updatedDate=#{updatedDate} where id=#{id}
    </update>
    
    <select id="IdSysteUser" parameterType="int" resultType="User">
        select tu.id,tu.userName,tu.`password`,tu.`name`,tr.id as roleId,tr.`name` as roleName,tu.entryDate,tu.leaveDate,tu.email,tu.loginDate,tu.state from t_user tu
		LEFT JOIN t_user_role tur
		on tu.id=tur.userId
		LEFT JOIN t_role tr
		on tur.roleId=tr.id
		where tu.delete_flag='否' and tu.id=#{id}
    </select>
    
    <select id="queryUserNameSysteUser2" resultType="User" parameterType="map">
        select tu.id,tu.userName,tu.`password`,tu.`name`,tr.id as roleId,tr.`name` as roleName,tu.entryDate,tu.leaveDate,tu.email,tu.loginDate,tu.state from t_user tu
		LEFT JOIN t_user_role tur
		on tu.id=tur.userId
		LEFT JOIN t_role tr
		on tur.roleId=tr.id
		where tu.delete_flag='否' and tu.userName=#{userName} and tu.id != #{id}
    </select>
    
    <select id="queryNameSysteUser2" resultType="User" parameterType="map">
        select tu.id,tu.userName,tu.`password`,tu.`name`,tr.id as roleId,tr.`name` as roleName,tu.entryDate,tu.leaveDate,tu.email,tu.loginDate,tu.state from t_user tu
		LEFT JOIN t_user_role tur
		on tu.id=tur.userId
		LEFT JOIN t_role tr
		on tur.roleId=tr.id
		where tu.delete_flag='否' and tu.`name`=#{name} and tu.id != #{id}
    </select>
    
    <update id="update" parameterType="user">
        update t_user set userName=#{userName},name=#{name},entryDate=#{entryDate},leaveDate=#{leaveDate},updatedBy=#{updatedBy},updatedDate=#{updatedDate} where id=#{id} 
    </update>
    
    <insert id="addRoleId2" parameterType="Map">
        insert into t_user_role (roleId,userId) values (#{roleId},#{userId})
    </insert>
    
    <update id="addRoleId3" parameterType="Map">
        update t_user_role set roleId=#{roleId} where userId=#{userId} 
    </update>
    
    <update id="delete" parameterType="int">
        update t_user set delete_flag='是' where id=#{id}
    </update>
    
    <select id="systemLogCount" resultType="int" parameterType="map">
        select count(1) from t_log where delete_flag='否' and userId=#{logUserId}
        <if test="uentryDate!=null &amp;&amp; uentryDate!=''">
			and	createDate &gt; #{uentryDate}
		</if>
		<if test="uentryDate2!=null &amp;&amp; uentryDate2!=''">
			and createDate &lt; #{uentryDate2}
		</if>
        
    </select>
    
    <select id="listSystemLog" resultType="Systemlog" parameterType="map">
        select tl.id,tl.userId,tu.userName,tl.logMessage,tl.createDate,tl.remark from t_log tl
		LEFT JOIN t_user tu
		on tl.userId=tu.id
		where tl.delete_flag='否' and tl.userId=#{logUserId}
		<if test="uentryDate!=null &amp;&amp; uentryDate!=''">
			and	tl.createDate &gt; #{uentryDate}
		</if>
		<if test="uentryDate2!=null &amp;&amp; uentryDate2!=''">
			and tl.createDate &lt; #{uentryDate2}
		</if>
		GROUP BY tl.id
		order by tl.id desc
		limit #{pageIndex},#{pageSize}
    </select>
    
    <insert id="addLog" parameterType="Systemlog">
        insert into t_log (userId,logMessage,createDate,remark) values (#{userId},(select text from t_power where id=#{id}),#{createDate},(select text from t_power where id=#{id}))
    </insert>
    
    <insert id="loginLog" parameterType="Systemlog">
        insert into t_log (userId,logMessage,createDate,remark) values (#{userId},#{remark},#{createDate},#{remark})
    </insert>
</mapper>