<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.znsd.circuit.dao.InspectionDao">
    <resultMap type="Inspection" id="inspectionTask">
      <id column="id"  property="id" /> 
      <id column="threadId" property="threadId"/>
      <association property="threads" column="threadId" javaType="Threads">
             <id column="id"  property="id" />
             <result  column="name" property="name"/>
             <result  column="coding" property="coding"/>
             <result  column="endTower" property="endTower"/>
            <result  column="startTower" property="startTower"/>
         </association>
         <association property="task" column="taskId" javaType="Task">
             <id column="id"  property="id" />
             <result  column="name" property="name"/>
             <result  column="coding" property="coding"/>
             <result  column="createdDate" property="createdDate"/>
             <result  column="actualDate" property="actualDate"/>
             <result  column="predictDate" property="predictDate"/>   
               <result  column="remark" property="remark"/>
                <result  column="state" property="stateInteger"/>
                <association property="user" column="taskMan" javaType="User">
                      <id column="id"  property="id" />
                     <result  column="name" property="name"/>     
               </association>
         </association>  
    </resultMap>

	<select id="getSystemParam" resultType="Systemparam"
		parameterType="String">
		SELECT id,settingName
		FROM t_systemparam where
		settingid
		=
		(select id FROM t_systemsetting
		WHERE coding=#{coding} AND
		delete_flag='否' AND state='启用')
	</select>
	<select id="getAllThread" resultType="Threads">
		SELECT id,name from
		t_thread where state='0'
	</select>
	<select id="getThreadTower" resultType="Threads" parameterType="int">
		SELECT startTower,endTower FROM t_thread WHERE id=#{id}
	</select>
	<select id="getInspectionStaff" resultType="User" parameterType="String">
		SELECT u.id,u.name,r.coding FROM t_user u
		LEFT JOIN t_user_role ur ON u.id=ur.userId
		left JOIN t_role r ON
		ur.roleId=r.id
		WHERE u.state='0' and r.coding=#{coding}
	</select>
	<!-- 通过巡检task的id获取inspection的id  -->
	<select id="getInspectionId" resultType="int" parameterType="int">
		SELECT id FROM t_inspection WHERE taskId=#{id}
	</select>
	<!-- 通过巡检task的id获取inspection的threadId -->
	<select id="getThreaddByTask" resultType="Threads" parameterType="int">	
		SELECT ins.threadId as id,coding,th.name FROM t_inspection ins
		left JOIN t_thread th on ins.threadId=th.id
		 WHERE ins.taskId=#{id}
	</select>
	<!-- 通过线路threadId获取Tower  -->
	<select id="getTowerByThread" resultType="Tower" parameterType="int">
		select id,coding,lineId,state from t_tower where coding BETWEEN 
		(SELECT startTower FROM t_thread WHERE id=#{id}) 
		and 
		(SELECT endTower FROM t_thread WHERE id=#{id})
	</select>
	<select id="getAllFlaw" resultType="Flaw">
		SELECT id,name FROM t_flaw WHERE state=0
	</select>
	<select id="getInspectionPageCount" resultType="Integer" parameterType="Map">
	select count(1) from (
		SELECT DISTINCT t.id
		from t_inspection i
		left JOIN t_inspectionstaff ins ON i.id=ins.inspectionId
		left JOIN t_task t ON i.taskId=t.id
		left JOIN t_thread
		th ON i.threadId=th.id
		left JOIN t_user u on t.createdBy=u.id
		left
		JOIN t_systemparam sy on
		t.state=sy.id
		WHERE t.type='巡检任务' 
		<if test="operate == 'execute'">
			and t.state not in (SELECT id FROM t_systemparam where settingid
		= (select id FROM t_systemsetting
		WHERE coding='task_state' AND
		delete_flag='否' AND state='启用')
AND settingName='待分配' OR settingName='已取消')
			AND ins.userId=#{userId} <!-- AND ins.isReceipter='是' -->
		</if>
		<if test="operate == null">
			and t.taskMan=#{userId}
		</if>
		<if test="coding != null and coding != ''">
			and t.coding like '%${coding}%'
		</if>
		<if test="thread != null and thread != ''">
			and th.coding like '%${thread}%'
		</if>
		<if test="state != '' and state != null">
			and t.state=#{state}
		</if>
		<if test="taskMan != null and taskMan != ''">
			and u.name like #{taskMan}
		</if>
		<if test="startDate!=null &amp;&amp;startDate!=''">
		   and t.date &gt; #{startDate}
		</if>
		<if test="endDate!=null &amp;&amp;endDate!=''">
		   and t.date &lt; #{endDate}
		</if>
		)insp
	</select>
	<select id="getInspectionPage" resultType="Inspection"
		parameterType="Map">
		SELECT DISTINCT
		t.id,t.coding,t.name,th.name as
		thread,th.startTower,th.endTower,u.name as creater,t.date as
		createDate,sy.settingName as state,t.actualDate,t.delete_flag
		from
		t_inspection i
		left JOIN t_inspectionstaff ins ON i.id=ins.inspectionId
		left JOIN t_task t ON i.taskId=t.id
		left JOIN t_thread
		th ON i.threadId=th.id
		left JOIN t_user u on t.createdBy=u.id
		left
		JOIN t_systemparam sy on
		t.state=sy.id
		WHERE t.type='巡检任务' 
		<if test="operate == 'execute'">
			and t.state not in (SELECT id FROM t_systemparam where settingid
		= (select id FROM t_systemsetting
		WHERE coding='task_state' AND
		delete_flag='否' AND state='启用')
AND settingName='待分配' OR settingName='已取消')
			AND ins.userId=#{userId} <!-- AND ins.isReceipter='是' -->
		</if>
		<if test="operate == null">
			and t.taskMan=#{userId}
		</if>
		<if test="coding != null and coding != ''">
			and t.coding like #{coding}
		</if>
		<if test="thread != null and coding != ''">
			and th.coding like #{thread}
		</if>
		<if test="state != '--请选择--' and state != null">
			and t.state=#{state}
		</if>
		<if test="taskMan != null and taskMan != ''">
			and u.name like #{taskMan}
		</if>
		<if test="startDate!=null &amp;&amp;startDate!=''">
		   and t.date &gt; #{startDate}
		</if>
		<if test="endDate!=null &amp;&amp;endDate!=''">
		   and t.date &lt; #{endDate}
		</if>
		ORDER BY t.updatedDate desc
		LIMIT #{pageIndex},#{pageSize}
	</select>
	<insert id="addTask" parameterType="Inspection"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		t_task(name,taskMan,type,coding,state,date,predictDate,description,createdBy,createdDate,updatedBy,updatedDate,delete_flag,remark)
		VALUES(#{name},#{creater},'巡检任务',#{coding},4,#{createDate},#{predictDate},'',${creater},NOW(),#{creater},NOW(),'否',#{remark});
	</insert>
	<insert id="addInspection" parameterType="Inspection">
		INSERT INTO
		t_inspection(taskId,threadId,remark)VALUES(#{id},#{thread},#{remark})
	</insert>
	<insert id="addInspectionStaff" parameterType="Map">
		INSERT INTO
		t_inspectionstaff(inspectionId,userId,isReceipter,createdBy,createdDate,updatedBy,updatedDate,delete_flag)
		VALUES(#{inspectionId},#{userId},#{isReceipter},#{creater},NOW(),#{creater},NOW(),'否');
	</insert>
	<update id="updateInspectionState" parameterType="Map">
		UPDATE t_task SET state=(SELECT id
		FROM t_systemparam where
		settingid
		= (select id FROM t_systemsetting
		WHERE coding=#{coding} AND
		delete_flag='否' AND state='启用')
		AND settingName=#{settingName}) WHERE id=#{taskId}
	</update>
	<update id="updateInspectionDate" parameterType="Map">
		UPDATE t_task SET updatedBy=#{creater},updatedDate=NOW()
		<if test="actualDate != null">
			,actualDate=now()
		</if>
		<if test="predictDate != null">
			,predictDate=now()
		</if>
		 WHERE id=#{taskId}
	</update>
	
	<select id="getInspectionTaskById" resultMap="inspectionTask" parameterType="int">
	       select t.id,t.threadId,k.id,k.coding,k.name,h.id,h.name,h.startTower,h.endTower,u.name,k.createdDate
			,k.state,k.actualDate,k.predictDate,k.remark 
			from t_inspection t 
			inner join t_task k on t.taskId = k.id 
			inner join t_thread h on t.threadId = h.id
			inner join t_user u on k.taskMan = u.id
			where k.id = #{id}
	</select>
	
	<select id="getFlawInfoByTowerId" parameterType="int" resultType="Flawconfirm">
	     select t.towerId,t.flawId,t.flawGrade as flowGrade,t.discoverDate,t.isTrouble,serviceAbility,w.`name` as flawType,flawDesc,u.name as receiptMan 
		from t_flawconfirm t inner join t_flaw w on t.flawId=w.id inner join t_user u on t.userId=u.id
		where t.towerId = #{0} and t.taskId = #{1}
	</select>
	<select id="getInspectionTackStaff" parameterType="int" resultType="User">
	    select u.id,u.name from t_task k inner join  t_inspection t on k.id=t.taskId
		inner join t_inspectionstaff f 
		on t.id = f.inspectionId 
		inner join t_user u on f.userId = u.id
		where taskId=#{taskId}
	</select>
	<select id="checkFlawRecord" resultType="int" parameterType="Flawconfirm">
		SELECT count(1) FROM t_flaw_record fr 
			LEFT JOIN t_flawconfirm fc ON fr.flawconfirmId=fc.id
			WHERE fr.receiptState=0 AND fc.taskId=#{taskId} AND fc.towerId=#{towerId}
	</select>
	<insert id="saveFlawConfirm" parameterType="Flawconfirm" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_flawconfirm (flawId,towerId,taskId,threadId,discoverDate,isTrouble,userId,flawDesc,serviceAbility,flawGrade,confirmstate)
			values(#{flawId},#{towerId},#{taskId},#{threadId},NOW(),'有',#{userId},#{flawDesc},#{serviceAbility},#{flawGrade},1);
	</insert>
	<insert id="saveFlawRecord">
		INSERT INTO t_flaw_record(taskId,flawconfirmId,receiptState,createdBy,createdDate,updatedBy,updatedDate,delete_flag)
			values(#{taskId},#{id},0,#{userId},NOW(),#{userId},NOW(),'否');
	</insert>
	<update id="updateFlawConfirm" parameterType="Flawconfirm">
		update t_flawconfirm SET id=id
		<if test="flawId != null and flawId != ''">
			,flawId=#{flawId}
		</if>
		<if test="flawGrade != null and flawGrade != ''">
			,flawGrade=#{flawGrade}
		</if>
		<if test="serviceAbility != null and serviceAbility != ''">
			,serviceAbility=#{serviceAbility}
		</if>
		<if test="flawDesc != null and flawDesc != ''">
			,flawDesc=#{flawDesc}
		</if> 
		WHERE taskId=#{taskId} AND towerId=#{towerId}
	</update>
	<select id="getTowerFlaw" resultType="Flawconfirm" parameterType="Flawconfirm">
		SELECT flawId,flawGrade,serviceAbility,discoverDate,flawDesc FROM t_flawconfirm WHERE towerId=#{towerId} AND taskId=#{taskId}
	</select>
	<update id="updateFlawRecord" parameterType="int">
		update t_flaw_record set receiptState=1 where taskId=#{taskId}
	</update>
	<select id="checkInspectionReceipter" resultType="int" parameterType="Map">
		SELECT count(1) FROM t_inspectionstaff inst inner JOIN t_inspection ins ON ins.id=inst.inspectionId 
WHERE ins.taskId=#{taskId} AND inst.userId=#{userId} AND inst.isReceipter='是'
	</select>
	<select id="getTaskState" resultType="String" parameterType="int">
		SELECT settingName FROM t_systemparam WHERE id=(SELECT state from t_task where id=#{taskId})
	</select>
	<delete id="deleteInspectionStaff" parameterType="int">
		DELETE FROM t_inspectionstaff WHERE inspectionId in(SELECT id FROM t_inspection WHERE taskId=#{taskId})
	</delete>
	<select id="getUpdateInspectionInfo" resultType="Inspection" parameterType="int">
		SELECT 
		t.id,t.coding,t.name,i.threadId AS
		thread,th.startTower,th.endTower,t.predictDate,t.date as createDate,t.remark
		from t_inspection i
		left JOIN t_task t ON i.taskId=t.id
		left JOIN t_thread th ON i.threadId=th.id
		WHERE t.id=#{taskId}
	</select>
	<update id="updateInspection" parameterType="Inspection">
		update t_task set coding=#{coding},name=#{name},predictDate=#{predictDate},remark=#{remark} where id=#{id}
	</update>
	<update id="updateInspectionThread" parameterType="Inspection">
		update t_inspection set threadId=#{thread} where taskId=#{id}
	</update>
	<select id="checkInspectionCoding" ></select>
	<select id="getInspectionFlawCount" resultType="int" parameterType="Map">
		SELECT count(1)
		FROM t_flawconfirm c
		INNER JOIN t_task t ON c.taskId=t.id
		INNER JOIN t_thread h ON c.threadId=h.id
		INNER JOIN t_tower o ON c.towerId=o.id
		INNER JOIN t_flaw f ON c.flawId=f.id
		INNER JOIN t_flaw_record r ON c.id=r.flawconfirmId
		INNER JOIN t_systemparam sys ON sys.id = c.flawGrade
		INNER JOIN t_user u ON u.id=c.userId
		INNER JOIN t_user u2 ON u2.id=t.taskMan
		WHERE t.taskMan=#{creater} AND confirmstate=1 AND r.receiptState=1
		<if test="taskCoding != null and taskCoding != ''">
			and t.coding like #{taskCoding}
		</if>
		<if test="threadCoding != null and threadCoding != ''">
			and h.coding like #{threadCoding}
		</if>
		<if test="flawType != null and flawType != ''">
			and c.flawId=${flawType}
		</if>
		<if test="flawGrade != null and flawGrade != ''">
			and c.flawGrade=${flawGrade}
		</if>
		<if test="discoverDate != null and discoverDate != ''">
			and c.discoverDate &gt; #{discoverDate}
		</if>
		<if test="endDiscover != null and endDiscover != ''">
			and c.discoverDate &lt; #{endDiscover}
		</if>
		<if test="date != null and date != ''">
			and t.date &gt; #{date}
		</if>
		<if test="endDate != null and endDate != ''">
			and t.date &lt; #{endDate}
		</if>
	</select>
	<select id="getAllInspectionFlaw" resultType="FlawQuery" parameterType="Map">
		SELECT t.coding AS taskCoding,h.coding AS threadCoding,o.coding AS towerCoding,sys.settingName as flawGrade,
		f.`name` AS flawType,u.name as receipter,c.discoverDate,u2.name AS creater,t.date,c.serviceAbility,c.flawDesc
		FROM t_flawconfirm c
		INNER JOIN t_task t ON c.taskId=t.id
		INNER JOIN t_thread h ON c.threadId=h.id
		INNER JOIN t_tower o ON c.towerId=o.id
		INNER JOIN t_flaw f ON c.flawId=f.id
		INNER JOIN t_flaw_record r ON c.id=r.flawconfirmId
		INNER JOIN t_systemparam sys ON sys.id = c.flawGrade
		INNER JOIN t_user u ON u.id=c.userId
		INNER JOIN t_user u2 ON u2.id=t.taskMan
		WHERE t.taskMan=#{creater} AND confirmstate=1 AND r.receiptState=1
		<if test="taskCoding != null and taskCoding != ''">
			and t.coding like '%${taskCoding}%'
		</if>
		<if test="threadCoding != null and threadCoding != ''">
			and h.coding like '%${threadCoding}%'
		</if>
		<if test="flawType != null and flawType != ''">
			and c.flawId=${flawType}
		</if>
		<if test="flawGrade != null and flawGrade != ''">
			and c.flawGrade=${flawGrade}
		</if>
		<if test="discoverDate != null and discoverDate != ''">
			and c.discoverDate &gt; #{discoverDate}
		</if>
		<if test="endDiscover != null and endDiscover != ''">
			and c.discoverDate &lt; #{endDiscover}
		</if>
		<if test="date != null and date != ''">
			and t.date &gt; #{date}
		</if>
		<if test="endDate != null and endDate != ''">
			and t.date &lt; #{endDate}
		</if>
		limit #{pageIndex},#{pageSize}
	</select>
</mapper>